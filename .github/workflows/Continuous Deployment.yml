name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**.php'

run-name: ${{ github.workflow }} by @${{ github.actor }} from ${{ github.ref_name }}

jobs:

  publish:
    if: (!contains(github.event.head_commit.message, 'skip deploy'))
    name: Deploy New Blog Version
    runs-on: ubuntu-latest

    env:
      APP_CONTAINER_REPO: ${{ vars.APP_CONTAINER_REPO }}
      APP_BUILD_CONTAINER_PATH: ${{ github.workspace }}/k3s/app/php

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Vultr Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.VULTR_CONTAINER_REGISTRY_HOST }}
          username: ${{ secrets.VULTR_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.VULTR_CONTAINER_REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: docker-app-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.APP_CONTAINER_REPO }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build && Push [FRONT-END]
        if: ${{ vars.WITH_BUILD_APP_FRONTEND == 'true' }} && github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: frontend
          tags: ${{ env.APP_CONTAINER_REPO }}:frontend
          file: ${{ env.APP_BUILD_CONTAINER_PATH }}/Dockerfile
          cache-from: |
            type=gha,scope=frontend
            type=registry,ref=${{ env.APP_CONTAINER_REPO }}:frontend
          cache-to: |
              type=gha,mode=max,scope=frontend
              type=registry,ref=${{ env.APP_CONTAINER_REPO }}:frontend,mode=max,image-manifest=true

      - name: Build && Push [EXTENSIONS + PACKAGES]
        if: ${{ vars.WITH_BUILD_APP_DEPENDENCIES == 'true' }} && github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: dependencies
          tags: ${{ env.APP_CONTAINER_REPO }}:dependencies
          file: ${{ env.APP_BUILD_CONTAINER_PATH }}/Dockerfile
          cache-from: |
            type=gha,scope=dependencies
            type=registry,ref=${{ env.APP_CONTAINER_REPO }}:dependencies
          cache-to: |
              type=gha,mode=max,scope=dependencies
              type=registry,ref=${{ env.APP_CONTAINER_REPO }}:dependencies,mode=max,image-manifest=true
